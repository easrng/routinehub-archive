{"id":"4626","name":"Dictionary Action Builder","tagline":"JSON ⇐⇒ dictionary action conversion tool","icon":"ios14 c4292093695 g59748","latest":"34518","description":"\n\t\t\t\t\t<table>\n<thead>\n<tr>\n<th>OS</th>\n<th>Compatibility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>macOS</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>iOS 15 or higher</td>\n<td>Yes*</td>\n</tr>\n<tr>\n<td>iOS 14 or lower</td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>\n<p>*All features except for <em>Action → JSON Conversion</em> work via SSH to Mac.</p>\n<p>Please download <em><strong>Shortcut Source Helper</strong></em> (<a href=\"https://routinehub.co/shortcut/10060\">https://​routinehub.co/​shortcut/​10060</a>) to use this shortcut.</p>\n<p><img alt=\"\" src=\"https://i.imgur.com/Cy2fHwc.png\"></p>\n<p><em>Dictionary Action Builder</em> converts JSON text to native dictionary or list actions and vice versa. It can also join multiple dictionary actions into one.</p>\n<h4>JSON → Dictionary Action</h4>\n<p>This shortcut helps you create complex dictionary actions in Shortcuts. You can write and test dictionaries in JSON-style text, e.g. <code>{\"name\":\"bong\",\"happy\":true}</code>, and later use this tool to convert them to native actions, avoiding painful steps in building multi-level actions manually. </p>\n<p>Arrays, e.g. <code>[\"hello\", \"world\"]</code>, can also be converted to list actions. It can convert multiple objects, e.g. <code>{} [2, 3] {\"say\":\"hi\"}</code>, at once and accepts (text, json, pdf, etc) files or text selection through a share sheet or file picker, or copied text in the clipboard.</p>\n<p><em>“Dictionaries in text form are easier to read and edit. Why convert to native actions?”</em> you may ask.</p>\n<ol>\n<li>\n<p>Native actions look cool :) but are hard to navigate and edit. Sometimes you would like to have native actions instead of messy text actions when you share your works with others. With this tool, you can continue using text dictionaries throughout your developing and testing phases.</p>\n</li>\n<li>\n<p>Dictionaries in text form do not retain the order of the key/value pairs when run. This is a pain when the order is important, for example, if you want to iterate through the keys or values in a specific order. This tool preserves the order.</p>\n</li>\n<li>\n<p>You can create dictionaries containing newline characters in keys or values.</p>\n</li>\n<li>\n<p>This tool is probably the only way to create lists with multiple-type items such as numbers, booleans and even dictionaries, e.g. <code>[\"text\", -2.3, false, {\"a\":\"b\"}]</code>. Please be aware that a list inside a list will crash your shortcut.</p>\n</li>\n</ol>\n<h4>Dictionary Action → JSON</h4>\n<p>Select <em>Extract JSON from Shortcut</em> from the menu and it will extract all dictionary actions and multi-type list actions containing dictionaries from a shortcut, convert them to JSON and let you quick look, share, save or copy to clipboard.</p>\n<p>The main benefit of this tool over dumping JSON directly from a dictionary action is that this one preserves the key/value order, allowing you to edit and convert repeatedly.</p>\n<h4>Merging Dictionary Actions</h4>\n<p>Select <em>Merge Dictionary Actions</em> from the menu and it will merge consecutive dictionary actions in a shortcut into one. Same applies to consecutive multi-type list actions containing dictionaries. Simply put, the process is analogous to joining JSON objects:</p>\n<ul>\n<li><code>{\"a\":1</code><strong>}, {</strong><code>\"b\":2}</code> → <code>{\"a\":1, \"b\":2}</code></li>\n<li><code>[{\"a\":1</code><strong>}], [{</strong><code>\"b\":2}]</code> → <code>[{\"a\":1, \"b\":2}]</code></li>\n</ul>\n\t\t\t\t","releasenotes":"<p><strong>2.2.5 - Aug. 10, 2022, 11:19 a.m.</strong></p><p>2022-08-10<br>&nbsp;&nbsp;• Small bug fixes and UI improvements</p>"}