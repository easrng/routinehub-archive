{"id":"6409","name":"μUpdate-JS","tagline":"Make your Shortcuts Self-Updating with Only 9’Actions","icon":"ios14 c946986751 g59657","latest":"21886","description":"\n\t\t\t\t\t<p>Still trying to predict which Updater your users already have?  </p>\n<p>Sick of trying to persuade them to download Y.A.U. (Yet Another Updater?)</p>\n<p>If you’re like me, adding a score or more actions to your clean Shortcut just to check for updates feels ... ugh. </p>\n<p>Embed this 9 Action Snippet to make any Shortcut self-updating.  Running  at the speed of RoutubeHub’s API, nothing should get between your users and your slick new updates. </p>\n<p>This bare bones code provides a UX that is surprisingly attractive and functionally complete, with no unnecessary information to distract users from what’s important: </p>\n<p>1 Theres an update\n2. See what’s in it. \n3. Click here to get it. </p>\n<p>Version strings can be anything you like, in any ‘order’ that you prefer.  The current RH version will always be presented as an “Update” to any other version.   </p>\n<p>The snippet is a functional shortcut which takes 3 dictionary value parameters via “Shortcut Input”. Once embedded into your own code, connect these three parameters to your Shortcut’s values.   (ID, Version, &amp; Name.)</p>\n<p>When I download a new Shortcut built to use an Updater I don’t want. I often “fix” it to call my own copy of μUpdate, passing in the dictionary as usual.   But please don’t direct users to download μUpdate for that purpose</p>\n\t\t\t\t","releasenotes":"<p><strong>2.0 - Oct. 16, 2020, 12:52 a.m.</strong></p><p>Completely rewritten for significant speed increases.  Replaced update check method with JavaScript and switched from “Get Contents” to “Get File of Type”</p>"}