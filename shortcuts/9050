{"id":"9050","name":"If Action Enhancer","tagline":"Modifies If statements to add goto functionality, or to restore legacy iOS 12 If behavior.","icon":"ios14 c4271458815 g59846","latest":"28138","description":"\n\t\t\t\t\t<h2>If Action Enhancer</h2>\n\n<p><b>If Action Enhancer</b> adds additional functionality to your If actions by making changes that would otherwise be impossible in the default Shortcuts editor.</p>\n<ul>\n<li>Move the Otherwise block anywhere in your shortcut, effectively turning it into a goto statement.</li>\n<li>Restore the old iOS 12 If statement functionality, allowing comparisons between far more variable types than what would otherwise be possible.</li>\n</ul>\n\n<h2>How It Works</h2>\n\n<p>If action editor works by scanning for specific comments in your shortcut, then creating a new shorcut with the necessary changes made.<br></p>\n<p>The comments themselves can be found inside the If Action Enhancer shortcut, and can be pasted into any of your other shortcuts.<br></p>\n<p><img alt=\"The comments that the shortcut scans for\" src=\"https://i.imgur.com/SxsHTcn.jpg\"></p>\n<h3>Removing the End If Block</h3>\n\n<p>When the End If block is removed from an If statement, the shortcut editor allows you to move the otherwise block anywhere in your shortcut, which effectively makes the If statement act as a goto!<br></p>\n<p><b>Note: </b><i>If statements without the End If will terminate the shortcut if they evaluate to true, and you come back to the If statement later in the shortcut execution. It is recommended that you keep the If statement empty when removing the End If, so that it always evaluates to false.</i><br></p>\n<p>To remove the End If block from an if statement, simply paste the corresponding comment above the If action, then run the If Action Enhancer shortcut.<br></p>\n<p><img alt=\"Example showing where to place the comment\" src=\"https://i.imgur.com/IEw9Frt.jpg\"><br></p>\n<p>After running If Action Enhancer, you will have an If statement that no longer has an End If associated with it. You can then move the otherwise block anywhere in the shortcut, and, provided that the condition is false, your shortcut will immediately jump to that point!<br></p>\n<p><b>Note: </b><i>Sometimes, the shortcuts editor will not allow you to move the otherwise statement. This can usually be fixed by moving the If block below the otherwise. If that doesn't work, you can also use a repeat statement to move both blocks to the desired location for the otherwise, then move the If block elsewhere.</i><br></p>\n<p><img alt=\"Example use cases for If statements as a goto\" src=\"https://i.imgur.com/KNh3eZM.jpg\"></p>\n<h3>Restoring Legacy If Behavior</h3>\n\n<p>If Action Enhancer can also restore the old iOS 12 handling of if statements in shortcuts made in iOS 13 and 14. This allows you to, for example, compare almost any item type directly, rather than needing to convert them into text first.<br></p>\n<p>To do this, first, create an If statement that uses the desired comparison type, then add the desired variable to the left side of the If statement. Then simply paste the corresponding comment above the If action, and run the If Action Enhancer Shortcut.<br></p>\n<p><b>Note: </b><i>The only comparison types supported are Is, Contains, Greater than, and Less than. Other comparison types will not work properly, as they did not exist in iOS 12.</i><br></p>\n<p><img alt=\"Example showing what the If statement should look like\" src=\"https://i.imgur.com/Tw5vD0n.jpg\"><br></p>\n<p>After running If Action Enhancer, the If statement will begin to work exactly as it did in iOS 12. This will even work if the user running the shortcut is on iOS 13 or 14!<br></p>\n<p><b>Note: </b><i>Making any changes to the comparison operator or to the variable on the left side will undo the modification, and you will need to run If Action Enhancer again to fix it.</i><br></p>\n<p><img alt=\"Example use case for legacy If behavior\" src=\"https://i.imgur.com/MpZjc9u.jpg\"></p>\n\t\t\t\t","releasenotes":"<p><strong>1.0.1 - June 11, 2021, 6:25 a.m.</strong></p><p>•Updated the announcement to better explain the bug with the goto functionality and how to prevent it from occurring.<br>•Fixed the announcement incorrectly appearing when the user attempts to use the legacy function rather than the goto function.</p>"}