{"id":"10060","name":"Shortcut Source Helper","tagline":"Helper for shortcut ⇐⇒ plist conversion and signing","icon":"ios14 c4292093695 g59796","latest":"31859","description":"\n\t\t\t\t\t<table>\n<thead>\n<tr>\n<th>OS</th>\n<th>Compatibility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>macOS</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>iOS 15 or higher</td>\n<td>Yes using SSH to Mac</td>\n</tr>\n<tr>\n<td>iOS 14 or lower</td>\n<td>Yes</td>\n</tr>\n</tbody>\n</table>\n<p>This is a helper for shortcuts that deal with plist shortcut sources. It has two features:</p>\n<ul>\n<li>Getting plist from shortcut<ul>\n<li>When no input is passed, it asks the user to choose a shortcut and returns its plist source.</li>\n</ul>\n</li>\n<li>Creating shortcut from plist<ul>\n<li>When a plist file is passed as input, it converts it into a shortcut.</li>\n<li>The shortcut name follows the plist filename.</li>\n<li>On macOS, it signs and opens the shortcut.</li>\n<li>On iOS 15, it needs a Mac to sign the shortcut via SSH. More on this below.</li>\n<li>On iOS 14, it creates and opens the iCloud link.</li>\n</ul>\n</li>\n</ul>\n<p>It provides common functionality to the following shortcuts (and reduces the need to re-enter SSH info in each shortcut on every update):</p>\n<ul>\n<li>Dictionary Action Builder (<a href=\"https://routinehub.co/shortcut/4626/\">https://routinehub.co/shortcut/4626/</a>)</li>\n<li>Tinycut Builder (<a href=\"https://routinehub.co/shortcut/4626/\">https://routinehub.co/shortcut/5217/</a>)</li>\n<li>Shortcut Source Tool (<a href=\"https://routinehub.co/shortcut/5256/\">https://routinehub.co/shortcut/5256/</a>)</li>\n<li>Join Shortcuts (<a href=\"https://routinehub.co/shortcut/10038/\">https://routinehub.co/shortcut/10038/</a>)</li>\n<li><em>Let me know if you create one.</em></li>\n</ul>\n<h2>Setting up for SSH</h2>\n<p>iOS 15 cannot sign shortcuts programmatically. However, if you have a Mac running macOS 12, this shortcut can send an unsigned shortcut and receive a signed one using SSH. To set up SSH, please follow these steps:</p>\n<ol>\n<li>On iOS, open ‘Shortcut Source Helper’ in edit mode.</li>\n<li>Scroll down and find the ‘Run Script over SSH’ action near the end. <img alt=\"\" src=\"https://i.imgur.com/0hdDSHm.png\"></li>\n<li>Expand the action and enter host and user info.</li>\n<li>Tap ‘SSH Key’ and ‘Share Public Key’.</li>\n<li>Send the key to your Mac using Copy or AirDrop, etc.</li>\n<li>On your Mac, copy the key to clipboard and open Terminal.</li>\n<li>Enter the following command and press return: <code>mkdir -p ~/.ssh</code></li>\n<li>And this (the key needs to be in the clipboard before pressing return): <code>pbpaste &gt;&gt; ~/.ssh/authorized_keys</code></li>\n<li>Quit Terminal and open System Preferences.</li>\n<li>Go to Sharing and turn on Remote Login.</li>\n</ol>\n<p>You need to do this when downloading an update of this shortcut or changing your device. For security, do <strong>NOT</strong> share this shortcut because your SSH info can also be shared.</p>\n<p><em>Thanks to <a href=\"https://www.reddit.com/user/zachary7829/\">u/zachary7829</a> for the SSH idea!</em></p>\n\t\t\t\t","releasenotes":"<p><strong>1.0.2 - Feb. 16, 2022, 11:06 a.m.</strong></p><p>2022-02-16<br>&nbsp;&nbsp;• Fixed macOS 12.2 compatibility</p>"}