{"id":"381","name":"_executeJS","tagline":"Use pure JavaScript in your shortcuts","icon":"ios12 c2846468607 g59734","latest":"679","description":"\n\t\t\t\t\t<p>There's a cool pattern I've seen in other shortcuts to offload more complex operations to javascript. It works by essentially making a simple webpage to run js code that does stuff, then outputs the result as text on the main document. The page source is base64 encoded to a URL in shortcuts, which can then be executed, and the contents retrieved as plain text.</p>\n<p>I wrapped this functionality in a little utility shortcut.</p>\n<p><strong>Example:</strong>\nHere's a shortcut that makes use of it as an example: <a href=\"https://www.icloud.com/shortcuts/521e67ea3ce348b6b6928f55748eaad0\">_xmlText2jsonText</a>, which uses a javascript library (<a href=\"https://github.com/x2js/x2js\">x2js</a>) to convert xml to json so you can make Dictionaries out of xml data.</p>\n<p><strong>Usage:</strong>\n_executeJS takes a single Dictionary as input with the following keys:</p>\n<p>{name}: {type} - description</p>\n<p>'<strong>js</strong>':{Text} - The javascript code that will be executed. You must return something at the end of this text. (i.e. return \"hello world\";). Whatever you return will be the text output of this shortcut. If you return a javascript object or array, it will be serialized via JSON.stringify(), and you'll be able to convert to a Dictionary with the returned text. Otherwise, numbers and strings are left alone.</p>\n<p>'<strong>libs</strong>':{Dictionary {'libName',{Text}}} - Optional javascript libraries that your code depends on. The idea here is to keep things organized. The libName doesn't really matter.. that's for you. The lib text content is any javascript that you want defined before your code runs. This can be anything from variable or function declarations, to copied minified libraries from npm or github.</p>\n<p>'<strong>input</strong>': {Dictionary | Number | Quoted Text} - Optional data for your javascript to work with. A variable named 'input' will be provided to your script. If input is a dictionary, you'll be working with a javascript object in code. If input is a string, you must enclose in quotes when defined.</p>\n<p>'<strong>debug</strong>': {Boolean} - Optional debug switch. When included and 'True', will popup a Quicklook of the script page source before executing. When I'm debugging, I turn this on and copy the page contents to my computer to actually work on the code instead of typing on my tiny phone.</p>\n<p>Hereâ€™s the original Reddit post for this shortcut in case any of the comments help with usage:  <a href=\"https://www.reddit.com/r/shortcuts/comments/9pp6hh/utility_shortcut_to_run_javascript/?st=JNJ3BPP9&amp;sh=fff536cb\">utility_shortcut_to_run_javascript</a></p>\n\t\t\t\t","releasenotes":"<p><strong>1.0 - Oct. 21, 2018, 4:46 p.m.</strong></p>"}