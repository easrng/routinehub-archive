{"id":"691","name":"Timed Playlist","tagline":"Makes an iTunes playlist of a specified duration in minutes.","icon":"ios12 c3980825855 g59790","latest":"2004","description":"\n\t\t\t\t\t<p>Makes a random playlist of iTunes songs whose total duration is very close to a specified length. You have an option to save the playlist before playing it; otherwise, the songs are just placed in the \"Up Next\" queue. Sets volume to 25% before starting playback to prevent accidental ear damage.</p>\n<p>Accepts a Dictionary input to enable skipping the user prompts when being called by another shortcut.</p>\n<p><img alt=\"Imgur\" src=\"https://i.imgur.com/RmK6C1Mm.png?1\"></p>\n<p>You can use this shortcut as an iTunes \"sleep\" timer that has the feature of never awkwardly pausing midway through a track. Or, you can use it to facilitate building a playlist that's long enough to score an event/activity.</p>\n<ul>\n<li><strong>Driving Playlist</strong> - Have to pause your music when you get to your destination anyway? Let it pause <em>itself</em> while you grab your ID or listen to the final critical turns from your GPS.</li>\n<li><strong>Slideshow Playlist</strong> - Have six minutes and 15 seconds of photos in your timed slideshow? Generate a 6.25-minute playlist to go with it.</li>\n<li><strong>Casual Timer</strong> - Are you timing the Thanksgiving turkey? No? Then skip the klaxon in favor of the world's least annoying timer.</li>\n</ul>\n<h4>Details</h4>\n<p>The shortcut matches the target length by randomly pulling songs until it exceeds that duration, and then randomly dropping the final song to sometimes undershoot the target. This is done a few times to get multiple candidate playlists, and then the one with the duration closest to the goal is presented. This approach means <strong>you can adjust the number of iterations</strong> (by changing the \"samples\" variable near the top) to run longer and get durations that more precisely match the target.</p>\n<p><strong>The contents of your library constrain the duration accuracy</strong>. For example, if all your songs are at least three minutes long and you request a two-minute playlist, you're going to get a one-song three-minute playlist.</p>\n<p>The tracks that get used depend on the \"Find Music Where\" action (located ~2/3 down). As configured, it <strong>selects downloaded music that's not in the Comedy or Spoken Word genres</strong>, i.e., actual music. But you may want to go in and edit the filters to select something else. With a \"Get Playlist\" action you can restrict the \"Find Music Where\" filter to just the songs in a specific playlist.</p>\n<h4>Calling from Another Shortcut</h4>\n<p>If called from another shortcut, configure by passing a Dictionary containing any of these keys:</p>\n<ul>\n<li>minutes = &lt; number of minutes &gt;</li>\n</ul>\n<p>Create a playlist of this length instead of asking user. Passing this key also disables update checking to ensure the calling shortcut doesn't get delayed or aborted.</p>\n<ul>\n<li>ask_use = no</li>\n</ul>\n<p>Don't ask if user wants to accept playlist. This prevents a calling shortcut from being aborted if they cancel.</p>\n<ul>\n<li>save_playlist = (yes|no)</li>\n</ul>\n<p>Instead of asking user, always|never save the generated playlist.</p>\n\t\t\t\t","releasenotes":"<p><strong>5 - Nov. 11, 2018, 8:51 p.m.</strong></p><p>Set 25% volume for ear safety. Fixed hanging at end.</p>"}